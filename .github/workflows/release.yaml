name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      android:
        description: 'Build Android'
        required: false
        type: boolean
      linux:
        description: 'Build Linux'
        required: false
        type: boolean
      windows:
        description: 'Build Windows'
        required: false
        type: boolean

jobs:
  build-for-android:
    runs-on: ubuntu-latest
    name: "Build for Android"
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/') || inputs.android
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Create secrets
        run: |
          echo "$SECRETS_JSON" | base64 -di > secrets.json
          echo "$GOOGLE_SERVICE_JSON" | base64 -di > android/app/google-services.json
          echo "$ANDROID_KEYSTORE" | base64 -di > android/app/strumok.jks
        env:
          SECRETS_JSON: ${{ secrets.SECRETS_JSON }}
          GOOGLE_SERVICE_JSON: ${{ secrets.GOOGLE_SERVICE_JSON }}
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
        shell: bash
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'  
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
          cache: true
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: Build Flutter for Android
        run: flutter build apk
      - name: Upload android outputs
        uses: actions/upload-artifact@v4
        with:
          name: android-outputs
          path: build/app/outputs/flutter-apk/*.apk
          retention-days: 7

  build-for-linux:
    runs-on: ubuntu-latest
    name: "Buid for Linux"
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/') || inputs.linux
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Create secrets
        run: echo "$SECRETS_JSON" | base64 -di > secrets.json
        env:
          SECRETS_JSON: ${{ secrets.SECRETS_JSON }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -m -y clang cmake libgtk-3-dev ninja-build libstdc++-12-dev liblzma-dev mpv unzip libmpv-dev
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
          cache: true
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: Build Flutter for Linux
        run: flutter build linux
      - name: Upload linux outputs
        uses: actions/upload-artifact@v4
        with:
          name: linux-outputs
          path: build/linux/x64/release/bundle/
          retention-days: 7

  build-for-windows:
    runs-on: windows-latest
    name: "Build for Windows"
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/') || inputs.windows
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Create secrets
        run: echo "$SECRETS_JSON" | base64 -di > secrets.json
        shell: bash
        env:
          SECRETS_JSON: ${{ secrets.SECRETS_JSON }}
      - run: choco install yq
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
          cache: true
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: Build Flutter for Windows
        run: flutter build windows
        shell: bash
      - name: Build Installer
        run: |
          cd _packaging/windows
          iscc.exe strumok.iss
      - name: Upload windows outputs
        uses: actions/upload-artifact@v4
        with:
          name: windows-outputs
          path: |
            build/windows/x64/runner/Release/
            .packaging/windows/Output
          retention-days: 7

  release:
    runs-on: ubuntu-latest
    name: "Release"
    permissions: write-all
    needs: [build-for-android, build-for-linux, build-for-windows]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-outputs
          path: android-outputs
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-outputs
          path: linux-outputs
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-outputs
          path: windows-outputs
      - name: RePackage Desktops
        run: |
          tar -czf strumok-linux.tar.gz -C linux-outputs .
          zip -r strumok-windows.zip windows-outputs/build/windows/x64/runner/Release/*
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            android-outputs/*
            strumok-linux.tar.gz
            strumok-windows.zip
            windows-outputs/.packaging/windows/Output/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}